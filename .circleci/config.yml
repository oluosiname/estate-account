version: 2

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: estate_account_test
      POSTGRES_PASSWORD: ""
      PGPASSWORD: ""
      NODE_ENV: test
  postgres: &postgres
    image: circleci/postgres:9.6-alpine
      
jobs:
  build:
    working_directory: ~/estate-account
    shell: /bin/bash --login
    # CircleCI 2.0 does not support environment variables that refer to each other the same way as 1.0 did.
    # If any of these refer to each other, rewrite them so that they don't or see https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables .
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
    - image: circleci/node:10.16.0
    - image: circleci/postgres:9.6-alpine
    steps:
    - checkout
    
    - run: npm install
    # Save dependency cache
    - save_cache:
        key: v4-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - ./node_modules
    # Test
    #   This would typically be a build job when using workflows, possibly combined with build
    # This is based on your 1.0 configuration file or project settings
  test:
   parallelism: 3
   docker:
   - image: circleci/node:10.16.0
   - *postgres
   steps:
   - checkout
   - run: npm run test:prepare
   - run: npm run test
    

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
